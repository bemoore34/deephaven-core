quarkus.http.port=7117

# This was working, but it broke, and it's harder to iterate on native java
#quarkus.package.type=native
#quarkus.native.additional-build-args=--initialize-at-run-time=io.deephaven.demo.NameConstants,--initialize-at-run-time=io.deephaven.demo.NameGen

# Disabling ssl for now, so we can let envoy handle the tls brains
quarkus.ssl.native=false
quarkus.vertx.prefer-native-transport=false
#quarkus.ssl.native=true
#quarkus.vertx.prefer-native-transport=true

quarkus.container-image.build=true
quarkus.container-image.push=true
quarkus.container-image.builder=docker

quarkus.http.host=0.0.0.0
quarkus.http.so-reuse-port=true
# The three below only work in linux. Above two work on linux and osx
quarkus.http.tcp-quick-ack=true
quarkus.http.tcp-cork=true
quarkus.http.tcp-fast-open=true
# The three above will be set to false for you on mac osx when running via gradle.

quarkus.container-image.registry=us-central1-docker.pkg.dev
quarkus.http.cors.origins=https://demo.deephaven.app
quarkus.container-image.group=deephaven-oss/deephaven
quarkus.container-image.name=demo-server
quarkus.http.http2=true

# TODO: identify proxy forwarding flags below that we don't actually need
# (these were necessary in kubernetes deployments)
quarkus.http.proxy.allow-forwarded=true
quarkus.http.proxy.proxy-address-forwarding=true
quarkus.http.proxy.enable-forwarded-host=true
quarkus.http.proxy.enable-forwarded-prefix=true
